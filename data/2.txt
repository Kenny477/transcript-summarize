 You yeah. Yeah. Okay. Recording for you. Okay. As I said in the first class, we are introducing you to the different areas of research in the department. And so we have two extremes. In the first class. You are seeing machine learning. And as we, we, I don't know if we'll have time to talk about machine learning is the future. And in the biggest seeing some say it's the biggest revolution, a bath. But it's imprecise. It's not mathematics. We don't unders, well, and some people say it's inherent. We will not ever understand it well. Okay, because if we understand it well, it's not it will not be machine learning anymore. And same as we did in mid-August. And our brain, the, on the, on the other that actually we have what's called theory. And the theory. There is one very CE, full application called cryptography. And Professor Amishi high, we present today this direction, professor I'm in Zhuhai joined to another, I think around 20 or 40, right? Yes. Something like this interview with us over the year 2000 when he finished MIT and at the beginning read the mistake and went first to Princeton. And only that saw the light and came from us. But I must say is a classic example of a, of a theorist which I call the hotline. There's, you know, that you have a problem. You do other stuff in the meantime, but you go into it and you're going to tell your boy, did I meet you stoke in 2000 was about something called OSU for k of I don't pronounce it will obscure vacation giving you a program and a program into form. But you don't know anything about the working of a problem because you cannot go inside. And he recently solvate or as he said it, you know, Moby ****, you have the white when he hadn't pulled his white whale. Big revolution in which UCLA is getting some of the low rather falling on us to a bigger one bushel in cryptography. And next year, I don't know when around June or something he's giving even, even great MAD. Muslim mathematicians have their conference of the great things that happens these here. And the great mathematicians are dying to give a talk there. And I mean, it was invited to talk there, see a mammal, something that conference and today I think it will not go into decent great result. But that just, so there's a three course boat, something which is little piece. Something to boost by, is. Among others, these former advisor shuffled golden us 0 knowledge proofs. So I meet the floor is yours. All right, thanks for that introduction and welcome. Certainly welcome to all of you to to CS1 and for many of you, I'm sure to UCLA as well. And we're very glad to have you here and right. So as Ellie mentioned today, I thought I would give you a little introduction to cryptography and actually theoretical computer science more broadly through the lens of this beautiful concept called a 0 knowledge proof. Now of course, presumably, when you think about cryptography, I guess these days everyone thinks about Bitcoin. I guess that's what cryptography is to a lot of people nowadays. But more traditionally, people think about encryption and decryption and things like that. But one thing I really want to emphasize to all of you is that it's a much broader field, cryptography. And actually, the concept that as Ellie mentioned, was introduced by my PhD adviser shuffling Goldwasser, along with me, Silvio Micali and charlie Rackoff introduces concept called a zero-knowledge proof. Which so captivated me when I was an undergraduate. That I, I just wanted to devote my career to studying it. And it's really been introduced me to the area of cryptography and really lead to. Almost all the work that I've done, including this work on obfuscation that Ali was talking about, which unfortunately we won't have time to get into. But maybe I'll just briefly mention it towards the end. Alright? And another thing is that I would love for this class to be interactive. So I understand that's a tall order, but I would really, really like it if you would unmute yourself and just ask questions as we go on, I think that would make the class so much more fun for everyone. All right, so, so what is a zero-knowledge proof? It is this seemingly contradictory idea that I can somehow convince you that some statement is true. And you will have no idea why. Okay, you will have absolutely no clue as to why it's true, what's going on. And yet you will be mathematically convinced. And what we mean by mathematically convinced is that. And I can see some, some interesting chats happening, which is great, but I can't always see what's going on and on chat. So I really honestly encourage you to actually unmute yourself and speak up. But right, so people can complain. Yeah, This happens to me all the time. People tell me things. I don't know why, but I have to be actively, but that's different. That's where someone is basically forcing you to accept something like by threatening you with a bad grade or something like that. That is not what we're talking about. I'm talking about a way where I can convince you something that's true. And you believe that it's true. More than you believe that you will be struck by lightning five times in a row in the next week. Okay. And why do I say that? Because there is some probability that you will get struck by lightning five times in a row in the next week. It's a tiny, tiny probability, right? And we want the probability that someone could a fool you into believing a false proof to be just as low as the probability of getting struck by lightning five times in a row. Okay. I mean, you won't get direction. So you sir, I will present the students can let me give you an example of what a children's children I see clarify in the negative direction what Amit says. You've got a kid, another kid guns to get that kinda gather and says, I has this Superpower, superpower ability. I look at them to me and I continue precisely the number of leaves seen the tree. Now, you can count down so that it will take forever and life will go in your kit. You have to go home. How do you aware anybody with an idea, it's a Keats person. Raise your hand. I know the answer. I will keep quiet for anybody. It's a kid's puzzle. How do you prove you wrong? Now? I got it. I got it. I got it. All right. Okay. Somebody already wrote something in there. Okay. So we're okay. I was going to say ask at one time and then immediately remove like an unspecified number of leaves that you know, but they don't ask like Biennial shanghai. And then as you're immediately I said Well, I can tell him to tell him what to look. You remove some number between one and then let's say. And you can repeat it to increase the probability to get you to like me. You can repeat the experiment many times if you phase like, Oh, if he says was a, you know, he may be right or she may be right and then you can repeat it. A few failures. So probability that he can forever continue. This is 0. Yeah, okay, Thanks. Excellent. And right. So that's actually a great, a great introduction to what I was going to talk to you about. So before, but before we get into puddle of and all that, let me just motivate this to you a little bit. I mean, hopefully you all kinda think that it's fascinating. And I, and obviously I think it's a really fascinating idea. But it's also something that's incredibly useful, right? And just to give a little example these days, and this is something that still happens today, kind of, sadly for all of us who study cryptography. But if you're sitting here and there's some website that's over here and you want to log in even today, how does it work, right? You basically just send your password. Over to the website, right? I should just draw one arrow direction. And this is a terrible idea, right? Because if this password is hacked, and sorry, if the spiff this website hacked, which happens all the time, right, then the person who has a website can just walk off with your password since you just use gave it to the right. And you might think, well, what else can we possibly do, right? I mean, after all, I need to like it. Even in the old days, you know, if you, if you went up to some secret society and there was a password at the door, you have to stay the password. What can you do? This is just some sort of inherent limitation. And indeed for most of human history, we have Pot about things like this as being an inherent limitation. But what if you have zero-knowledge proofs? Now what I can do is, instead of doing this, which has been done for centuries, I can have you on the website. Except now, what you do is us talk back and forth and you prove that you know your password. All right? So if you could prove to the website that you know your password in 0 knowledge without revealing anything about your password, then it doesn't matter if the websites hacked. Even if the website fact you would still never be able to never be able to, they would never steal your password and run off with it. And there's this beautiful little example of the power of their knowledge. And in fact, although it might be true that many of you haven't, haven't done this. There are actually people who sell a little devices that kinda do this for you. So there's something that we actually do see happening slowly in the real-world. They're just a bunch of sort of usability kind of concerned that, that keep it from being adopted more or very broadly. Okay, That's just one little example of the power of 0 knowledge to some of the many, many amazing things that you can do with your knowledge. Okay? So, alright, And again, please do interrupt with questions that you have it, right? Okay. So, great. You know, hopefully are convinced because we don't have much time that zero-knowledge proofs are really useful and really fascinating. How do we actually do it? So Ellie already gave you the spread little example, that sort of kids example of the leaves on the tree. And it's at least a way for you to catch some light. I'm lying to you, right? Pretending that they can read all the trees that count all the leaves on a tree. But it contained the sort of key element, this key idea that we are actually going to try to generalize now, which is the idea of a challenge, right? The idea that the person who was the verifier, the person who was trying to be convinced, doesn't just take the person's word for it. Enter the challenge. And like the verifier will challenge the prover and say, Well, show me this, right. And then if the prover successfully chosen such that successfully passes the challenge, then the backward becomes a little more convinced that maybe the approval onto something. And then he tries again and again and again until finally the verifies like, Wow, yeah, nope, I believe you all right. So this idea of how we'll be just fine. Yeah, absolutely. I mean, let me just introduce you and other things. And the difference between Amit usage and the meat is that I don't allow failure even with probability 0 in some theoretical way. I investigate deterministic stuff. And we just talked about what I say. I don't believe that, man, that you know, that the machine learnings that we are doing now when this self-driving car, we will be ever able to pull that didn't behave. You know, there is no chance that because we live by themselves in the in the streets and there will never be an accident. Now, I don't know to explain why, but I feel this is a bot Computer Science. We know, for example, without computers could see already the size is extremely. Did. We don't know? We don't have to go see we build them a lot of seats. If we want, a local bumpy figure, must be due to release the key. You can use any of these. Indeed, that's a beautiful, beautiful point that aliens raising that for this idea of zero-knowledge to even make sense, we inherently need probabilistic thinking. We need there to be some probability, some tiny, tiny probability that things go wrong. And in this case, the thing that could go wrong is that you could be convinced that something that you can be convinced that something is true even if it's not, right. But the cool thing is that unlike almost every other aspect of our lives, right, where sadly these days we see everyone being convinced of false things pretty regularly. Because if you're just limited or unlimited human beings, right? But the cool thing about computer science and the cool thing about cryptography and cooking. But zero-knowledge is that we can actually prove mathematically that we can get that probability failure down as low as you want. If you want the probability of failure to be smaller than the chance of picking a particular atom at random from all the atoms in the universe. You can even go that low. It'll take you a long time, but you can even go that low. So that's something that's really cool. We can really fine tune our level of confidence probabilistically, not deterministically, probabilistically to as low a probability of error as we want. Okay? All right, so let's switch gears and try to think about how we might I see a raised hand. Would you like to do you like to ask your question? Right? Yeah. So I was just going to say it in the context of the leaf analogy. Would you say that the probability of error, I guess, and get the ends, the number of leaves correct every time, even though it's very, very, very unlikely. Exactly. Yes. Exactly. Right. And let's say that you were just doing it really, really simple way. You either only take one leaf off or 0. It's all right, let's say you just only 0 or one, right? Well, if he doesn't know how to actually count leaves magically, then he has a probability of 1.5 of failure, right? Of guessing wrongly. Let's say you, you've been told them, Look, I either 0 leaves off or one leaf off, you tell them in advance, you know exactly where you're doing. Still he has a probability one out of failure. But if you do this a thousand times in a row, now his probability of winning is two to the minus 1, 0, 0, 0, 1 over 2 to the 1, 10, 100, which is a ProRes the small number. So absolutely. And, um, and that was a great question. Thanks for asking. And I think that really helps to clarify what's going on. Excellent. All right. So any other questions, any other things are going to talk about? All right. There are no other questions. Let me actually tell you about a beautiful problem that comes from theoretical computer science, okay? And this is something we'll call it the map coloring problem. But for those of you who know a little bit, more technically, it's called the graph coloring problem, or more specifically, the graph 3 coloring problem. Paint. So here we have sort of a map of countries, right? And we want to color them using three colors so that no two countries that touch each other have the same color, I guess, kind of confusing. It's not nice to look at, okay. But but instead of drawing a map, the usual way, we'll draw the map is false. We'll just have what we call nodes, which are circles, which are the countries. And let's say they're at these two nodes, then, sorry, let me zoom out. If I connect them with an edge is called an edge, then we say these two countries are neighbor, okay? And when they should not have the same color. Okay? So let me just draw a little graph for you. It's a little complicated, but I just wanted to give you a cute puzzle for you guys to think about on your own. Okay? So here is our little map. Okay? It has 123456789 countries, right? And they're connected to each other and interesting way. Okay? And my challenge to you guys is, can we three color this map? Three color. So can leave. Yeah. So can we interject again? Okay, let me show you how at least what questions come to theoretical computer science. I think I understood, I know the answer. But I'm not 100 percent I know dancers or maybe probability of failure. Okay. There is a difference between the map, between the graph that I gave you here and a map. A map is drawn in the plane. This graph can be drawn in the plane by take my big bet, because you take that, you can take the two crossing edges and take one crossing edge and do it around. This is goals play. Now when you are able to draw a graph and there are no crossing edges, it's a clay now graph. Okay? So we know that a map, aerial map of countries will be played on a graph because we take a country to be ignored and we draw an edge between them if they share a border. I don't know. Minutes, it sounds obvious, but is every is every graph that you can plan in there? You can drawing the plan can be made into a map. I'm not no. Yeah, Amit, you know the answer to this. I can I've written my name, I can everybody can make into a map. You now have to extend it. Then the other option today and you have to fill the hole and you have to feed the whole season of snow. There is no no man's land, but isn't there. Okay. Which apocrine where employment is more about them anyway, because we've evolved our daily G naught maps. We know that four colors, you can always color with four colors. Planar graph cannot be always colored with four colors. This is very true. All right, So as I can see in the chat, we actually have a bunch of disagreements, right from people think now some people think, yes. Okay. So first of all, this is a great, great for a zero-knowledge proof, right? Wouldn't it be cool if someone could prove to you in 0, knowledge of this graph is in fact colorable. Okay? And in fact, we will. The answer is yes, this graph is indeed three colorable. Let's go ahead and let me go ahead and ask someone for, for their solution. I saw a bunch of yeses. Let me ask. Kan Tang, just randomly picked your name. Can you unmute yourself and tell us how we should do it? You can. I will. Or if not, can it anyone who fed yes. Who can unmute yourself and just start speaking with me. Yeah. Hey, is this okay, cool. Okay, so let's just let this for simple so they listen. There's colors. Instead of, because it's just too annoying on my whiteboard to change. But the colors are called 1, 2, and 3. Okay, so let's just make the top 11. And now how would you like me to color this one? The top one to the one? And then let's mark the next shoe is to entry. Excellent. And that's a nice little observation. Wherever we have a triangle, right? We need to have all three colors, right? So it's gotta be 1, 2, 3. Each of these triangles have to have all three colors. Cool. All right, let's go over here. What about this one? That would also be three. This fine. You want to make three. Cool. In the bottom left, one would be two here, and this is one of the triangle. And now what about this corner? That corner would be to do would be to okay. And what do you want to put here? And then I guess that would be one again, 13, right? Yep. And there you go. That's that is indeed a valid three coloring. Does everyone agree? Just want to make sure that everyone feels like they are. They, they get what we're doing. So excellent, good job. Like a cute little puzzle, right? And and I just want to point out a question. Yeah, I don't understand what you mean by 50k other and they I'm still confused about that. Okay? So observe that we have these three colors are called 123, red, blue, and green, whatever you want to call them. But just for simplicity, let's call them 123. And we colored each of the countries here, right? With a color. And then what we need to make sure is that no neighboring countries, no countries that are connected by an edge have the same color. That's the only rule. Done it. Yeah. Okay. Cool. All right. Excellent. And I'm glad you asked. We have to know what's going on if we're going to be able to reason about it, right? So all right, cool. So we came up with this, with this coloring. Again, it was not totally obvious. You know, some people learned something here. So what if instead, I want to be able to just prove to you that I know this coloring, Let's say this particular coloring, right? Without revealing to you anything about what the coloring is, how can we possibly do this? And this is not at all obvious. I'm not expecting you guys to to come up with an answer for me right away. In fact, the people who came up with the solution to this problem. They are all, Let's see, either Turing Award winners are Knuth Prize winners or never, like they're, they're like giant in our field. Let me put it that way. Okay. So it was Goldreich Napoleon rigorous than three complete giants and computer science. Who actually figured out how to do this. Okay, who figured out back in 1986, I believe, was when they published the result that showed how to prove that a graph is 3 colorable in 0 knowledge. Okay? So I'm going to let you guys like percolate some pots while I just speak, can ramble on a little bit about this. So before we get to that, before we try and we get to trying to figure out how to prove something like this is 3 colorable and zero-knowledge were again, the idea would be, I would convince you that such a coloring exists, but you would not at all learn what the coloring is. Okay? It would give you no hint whatsoever in terms of figuring out the colors are. That's our objective. So spoken. And before we jump into that, why? Let's answer the question. Why or less at least address the question, why should we care? Right? On the one hand, it's cool, it's cool, cool puzzle. And I have some advice for all of you, which is, why is a great question in general, we should always ask why and then ponder it and stay up at night thinking about such questions, I highly encourage all of you to do that, especially right now while you're in college is a perfect time to be thinking about these deep questions of life. But the one type of question that I think is not that useful is why should we care? So I actually don't think that's a great question to ask, but I know it's a very common one. So let's go ahead and answer it anyway. So why should we care about this question? It turns out rather remarkable that this problem called Map 3 coloring or graph 3 coloring more formally, is a really special problem. It is a problem that is called NP complete. Okay? And you won't know what this means probably for awhile. Maybe some of you've heard about it through YouTube or something. That's great. I hope that's true. But you will learn about this in our curriculum in CS 180, okay, so that's something you can look forward to. Now, what's so cool about NP-Complete problems? It turns out, and this is going to, I hope it blows your mind to, I remember being, my mind just being blown away when I, when I first learned this. It turns out that you can take essentially every other interesting problem in computer science and convert it into a map 3 coloring problem. So in other words, and I'm not, this is no joke. And what I'm saying right now, if I wanted to prove to you that my password was some whatever my password, I'm going to tell that to all 185 of you on this Zoom call. But like if I wanted to prove that my password with something and I could make that mathematical. Let's say I write down some encryption of my passport and then I want to prove to that that encryption is indeed an encryption of my password. I can actually convert that statement that I know my password into a map three coloring instance into a map, into something that looks like this. Okay? And whether or not that map is 3 colorable will correspond exactly to whether or not I know my password. Okay? I could give you an integer, k, and I could claim to you that, that integer is the product of two prime numbers. Okay? Again, doesn't look like a map, right? I'm talking about integers and multiplication. But I can actually take that statement that some integer is a product of two prime numbers and convert it into a map. And that map will be 3 colorable if and only if. That particular integer is a product of two primes. This is crazy. It is absolutely amazing, completely stunning. And it is because Map 3 coloring is NP-complete. Okay? So yes, not doing the injection, the size, also the question about to us, we'd be so this whole ******** on to the, to the number of beats you, it has to specify the composite number we choose. Do, we do applications due to, due to write books? You'll note, you'll take a problem and give me a huge rush and ask whether these three colors, so this will be sample ocean, love it. Absolutely. Yeah, and in fact, in general, I want to be clear. We're talking about theoretical things here. Actually converting that into a 3 colorable map, it, it becomes quite huge. It'll be like megabytes of information that will be required to represent the map. But it still can be done. It's still actually possible, which is something that is incredibly cool and incredibly powerful. So Right, okay, so I'm, I'm being asked for an example that is unfortunately outside the scope of this problem. Also, as I just mentioned, it would, of this lecture. As I just mentioned, if even a tiny example, if I was actually going to try to give it to, it would take, first of all, many, many electrodes for me to explain how to do this. And the map would be gigantic. So unfortunately, this is just a teaser trailer. I'm just giving you a trailer for CS 180. In fact, we're just one little part of CS 180. But if you want to know why that's true, You gotta take the 180 and learn about NP-completeness. Or maybe go to you to go to YouTube and look up how to look up NP-completeness. And in particular, the theorem that establish this was known as Cook's theorem. Google. And right, sorry, yeah, cook 11. But I don't suggest that you try to read the 11th version and then Karp reduction. So these are just a historical note about this problem. Okay? But now what have we done? We've now established that if we can in fact prove map three coloring in 0 knowledge, and we can prove anything. I can prove to you that some integer as a product of two prime numbers and zero-knowledge. How? First I'll convert it to a map, and I'll prove to you that that map is, is 3 colorable. So it's absolutely mind boggling, mind-bogglingly powerful. What, what this means. So let's go back to it. How will we actually do it? How? The question, question, yeah, please. Is the map analogy or do we actually linked to ATP? Do we actually make such a map to prove? It's an actual map. Whereby map, I mean, Like I don't mean I don't mean an actual physical map. I mean this thing called a graph. It is, this thing is called a graph and computer science. But this object is what I really mean. I mean, it's not an analogy. I can literally convert the, whether a particular integer as a product of two primes into some map that looks like that. Although we'll have way, way, way more nodes, way more edges. But, but yeah, I just this is not, I'm not I'm not giving you any there's nothing Nothing false about that statement. I see a hand raise set. You see, is it always three? Is there? Like sometimes I'm coloring on a very, very good question. So in fact, three is the minimum number when it becomes NP-Complete. So if you ask whether a map is two colorable, that's actually very easy to do and it doesn't give you that much power. But if you ask whether a map is 3 colorable or four colorable, or five colorable or six color. Well, that gives you all this power. But on the other hand, it really can always be three. I can always take any problem, any integer that I'm claiming is a product of primes. And I'll convert it into an app that is either three colorable or not. If it's three colorable than it is the product of two primes. And if it's not three colorable than it is not the product of two primes. So it literally is just always three. Alright, some more hands in the air. Let me see who that is. I had a question. Yeah. What's the difference between scale and manipulate meds and scaring the number of guests. Very good. Scaling the number of nodes is essential. We cannot achieve NP-completeness. We cannot talk about any statement, as I just mentioned, without scaling the number of nodes, scaling the number of colors is totally optional. So we can keep it at three and it will be still NP-complete if we want to change it to four or five, and that's our prerogative. But it is totally optional where scaling the number of nodes is essential to NP-Completeness. Finance your question. Yes, Thank you. Sure, It just does the agenda. People who book, Please tell me the video. We'd like to see. The fetus. Yeah, that would be that would be great. I see another hand. I'm going to just ask this in chat. I was wondering what extent benefit of increasing the number of colleagues. There. It's just an intellectual curiosity. And it's actually a very fascinating open problem in computer science to understand what's called the chromatic number of a graph. But that word veering off course here. So just intellectual curiosity, nothing else. There's another benefit. All right? Okay. Well, I realize also that we're running out of time. So maybe I will just give you a hint as to how we're going to do this. I'll let you think about it. You know, you have a few years. Think about this before. You'll learn about it all I'm completely, although you can always go to YouTube, trust me, you just searcher zero-knowledge proofs for graph 3 coloring. You'll find explanations on YouTube. So when we think about how let me first introduce to you a little helper that's going to help us solve this problem. Okay? So I'm going to introduce the idea of commitment. And what a commitment is in a cryptographic concepts, in a cryptographic sort of contexts that we're talking about here. Think of it as kind of like an envelope. It's kinda like a sealed envelope. So it's kind of like a sealed envelope. So imagine that we have ourselves a little envelope, right? And what I do is and write something down on a piece of paper with a pencil and paper. And I write, you will win $1 million tomorrow. Or let me put a date snacks and that's better for right? So like I'm putting some sort of prediction right, on this piece of paper. And then I stick the paper inside the envelope and seal it. Okay? So now I am committed to my prediction, right? But the prediction is inside the envelopes. You can't see it. This is an opaque envelope. Alright? So the idea again of a commitment is that I can write something down, stick it inside the envelope, seal it, and now no one can see what's inside my envelope. But later on, I can open the envelope and let you let you see what was inside it. Okay, that makes sense. And the hint to you guys is that I want to use these sealed envelopes to help us with our zero-knowledge proof. Map three coloring of graphs. Recall. Okay, not interjection of, think of it that, you know, I want it for each node in the graph, the same color. I will do on the side or another complex graph. When I draw it, I will draw it so that I can, so I know it's three coloring. But since I created, I probably don't know another. So economic profit. And my commitment to you will be to saying this graph to you and say that this node is hello Module 2 modulo the number, the value that I get to that logging the graph which eye color. And then if I stay in this is now the envelope. I opened the envelope by giving you, by coloring to you the graph that I sent you and showing you that. And you look at this graph, no, no, it's impossible that I, it's easy to create a graph which is 3 colorable. And because you created it and you know the coloring, it's very hard to create a graph which is 3 colorable. And you know, two different coloring of it. Okay, okay, let me, let me, let me switch back. So here we have our graph, right? And again, I do not want to reveal to you this coloring, right? I want to hide it from them. Okay? So let me just start with a very natural idea, which is, since I want to hide it, why don't I just commit to it instead? So what do I mean? I'm going to put little envelopes around all of these colors. Okay. Too. Okay. So now all these colors are inside up an envelope, right? So you can't see the colors anymore right now. Oops. That's too big. Right now. Anyway, just pretend, pretend that you can't see, that you can't see the colors because they're now inside the envelopes, right? So what I could do as a prover is I could put all my colors inside the envelopes and then hand these and show this to you, kind of show you a big board with all these envelopes attached to it, right? The edges are still there. You can still see the edges of the graph. I can see what color I've actually placed inside all the UNCLOS, right? Okay. Now what, remember I told you this idea of challenge response, right? So how could you challenge me to make sure that I wasn't lying? Anyone have an idea in the five minutes we have left? What could a challenge response here? B, I can ask them to guess what one of the envelopes, what synsacrum and envelopes. Right? Great. So let us try this again. So this is the prover, right? The prover prepares all obese. And now the verifier, which is the other player, could challenge you one of the envelopes, right? You could say, Well, open this envelope forming, right? And now I could open the envelope and you could just tell that there's at least a color there, right? There's a color between 13112 or three. That's good. That'll give you a little bit of a little bit of confidence that I'm not totally lying. But if this was a challenge response, how could I live what's in and what's a way that I could just clearly, you're still with me. What's a way that you could look at that I could totally do. This is the way that you are challenging. You can make I found it and I knew he could guess the other positions based on the knowledge and the one that was revealed. Oh, okay. Sorry. I think maybe I should just say to say something even even simpler, which is, if I'm a, I'm a, I'm a bad guy. Prove burnout. Okay. So i'm I'm going to try to do things wrong. Like I'm going to try to convince you that something is not true without knowing what the, what the actual what the actual coloring is. But what if here, instead of putting a three which is, which is part of a valid coloring, I just put a one. What do I put 1s everywhere? Actually, what if all throughout all of my envelope I just had once. If you still only challenged me to open one envelope, then you'll never catch me in this cheating. That makes sense. Yes, Thank you. Okay. Remember remember doing there. But it was a great idea. A great idea, right? To ask me to open envelopes. You suggested just one, right? And the problem with just one is that it doesn't really let you check, right? So what can we do instead, Alan? Hi, I noticed that earlier you said that there was a try. Taught that because of it, we need to be 123. Can we check the triangles? Okay, Cool. So I guess a Chloe suggests that had this sort of key idea was asked as a varchar, let's ask him to open some of the envelopes and she's she's just did one where there's one was not enough. Right. And you're suggesting, Hey, why don't we ask them to open a whole triangle, right, so that we can see what's going on inside of a triangle. Okay? And I'm so sorry guys, I love this discussion, but since we literally have only two minutes left. Let me just sort of jump to continue on to nine. We don't have two minutes left. I believe you died from nine to ten, so don't limit your students. Yeah. Okay. Yeah. All right. I will I think a lot of people do have to go to minutes, so I'm going to end right now. And I'm just going to tell you that the, the right answer is right in-between. Ploy it now, okay, So the right answer. I think there may be a GF. We shouldn't let us. So let's ask a prover to open a pair of envelopes that are connected by an edge. Okay? And if you ask the prover to open a pair of envelopes, then you can check that those two colors are different. Right? Now, think about it. If the prover did it know a valid climb, that means that the colors that he wrote in all the envelopes, there has to be at least one edge that was not properly colored, meaning you had the same color on both sides of that edge, right? That's exactly what it means to be an invalid color. So at least you have some chance of being able to guess that edge, catching me in the y, right? And again, if we do this many, many, many, many, many times, then it'll work. I skipped another very important part, which is that every time we do this though, I have to re-randomize my coloring. I have to pick a new permutation of my colors, 1, 2, and 3, permute them. Like for example, in this way, I know I keep 11, but I make two or three and I get 32. There are six equally valid permutations. I can permute the coloring each time and then make a whole bunch of new envelopes and set them up and have you challenge me. And if we keep doing this many, many, many, many times, then in fact, we'll be convinced that I didn't really have a valid three coloring. And I can't lie because if I try to lie at some point, you'll catch me. All right. So with that, I will have to conclude. There's so much more here. This is just a little glimpse, which is the whole point of CS wants to give you guys a little glimpse. That's right. But there's a ton more to learn. And I really strongly encourage you to learn about this. And within the curriculum it will be CS 180 and CS 180 one. That'll give you a little introduction to theoretical computer science. And, and then we also have cryptography courses at the graduate level and occasionally at the undergraduate level. And as undergrads, you're always welcome to take graduate courses as long as you've done the prerequisites to undergraduate courses. All right. Thank you, everyone. Okay. So also, don't need to go since we are taped, other people concede. Any questions? Yeah, Please. For those of you who can remain a little bit longer, please feel free to ask questions. I can hang out for another few minutes. All right. I see a few raised hands. Jason. What is the advantage of using this kind of zero-knowledge proof with As opposed to like, so something like RSA or other like checksums or something like that. Alright, cool. So as I mentioned, zero-knowledge proofs, what we discussed today, they're actually very different from encryption. You are talking about encryption like RSA. Rsa is a way for me to encrypt the message, send it over, and then you decrypt and you learn the message, right? And, uh, zero-knowledge proof. Somehow, I like encrypt this proof and I send it to you and you never learn what the profits. You only learn that it's correct. And that's through this challenge response game that we play together. That makes sense. So it's really fundamentally different than RSA, like comparing apples to different applications for it does tie knows this kind of challenge, right? I'm sorry. I couldn't hear what you said. Can you say it again? I'm just saying that like they're just used in different ways and different for different completely different application. They're really like apples and oranges. They're connected mathematically. So in fact, I drew this idea of this envelope, the envelope over here. We can actually implement that envelope using RSA. All right. Brim, come out. All right, So my question is more about like the like the three global map itself. How would you extend that right leg if it's in this, if it's a also dislike triangle thing where each node can have a maximum of three leg extension, sort of. How would you how would you like extend that for larger problems. Okay. So you're asking about hooks. Yeah, You're asking about Cook's theorem and Karp reduction. Beautiful question. I wish I could answer it in some succinct way. The only thing. Can mentioned to you maybe that might help, is the following. That think about what, what was interesting about this problem is that we had a bunch of triangles, which i, 3 triangles. But the triangles were interconnected in certain ways, right? And roughly speaking, whenever you have triangles, then you interconnect them. You're imposing constraints on the relationship between the colorings of the triangles. Okay? And by doing so, you're encoding what we call a constraint satisfaction problem. And it turns out that all computations can be converted into relatively simple constraint satisfaction problems, which can then be encoded using the way that you connect the triangles to each other. I know that's extremely vague, but it's the best I can possibly do in like a minute. Please. Thank you. Okay. Very good. Bryan Hooks. I'm quite proud of you about about using the envelope on what are the three color problem. Okay. What would you like me to answer? I didn't have been marked by that. Okay. So yeah. Um, I don't again, at the very high level, if we just put all the colors in these envelopes, right? Then you're, let's say you're the verifier. What do you see? You just see a bunch of envelopes. You don't see the colors, right? So when you look at those envelopes, you learn nothing. You see a bunch of envelopes. That's it, right? They're all the same to you. But then if you challenge me and you say, hey, open up those two envelopes, you know, open out, but let's say these two envelopes, right? Then I have to open up those two envelopes. The only thing that you learn as little microscopic view that hey, those two particular colors are not the same. All you learn when you knew that, right? Any valid coloring has to have different colors for any edge, right? And, and we also permuted the colors each time. So in fact, what you'll always see is just a completely uniform, a completely random collection of two unequal colors from 1, 2, and 3. Okay? This is not that simple and I definitely went over it very quickly. But I hope that you're at least getting some idea as to why it works. Does that help? I think Let me interject. It's an obstruction and they're easily something that was over-confident. Looked here at the beginning, we talked about two entities talking so they don't see each other. We talk slow communication channel. Now we abstract. We can do over communication channel. What is we think of that we are in the same room and we see things, and we see the envelope. Okay, so there is an obstruction of we are actually across a network, but we can emulate like we are in the same room and I see whether or not changing envelope or anything like this and don't lie to me about what's in the envelope. So the notion of commitment, which I wanted to give you some example of how you can do the commitment over the Internet. The emotional commitment is an obstruction. So you don't is I think this is what confuses you. You obstruct the situation. Right? Okay. Well, we will have to wrap up the last one. We just take another question. I yes. Hi. So basically my question was, if we know enough intersections and the hyper knows that a specific number of nodes won't be he also be able to figure out that this is the password? No. So okay. You guys are all asking about the Cook's theorem and carts or it's not that simple. So it's it has to do with the way that the password is encrypted. Basically, the connections between the triangles will correspond to the encryption of the password, whereas the coloring will correspond to the password and the randomness and the keys of the encryption. So that's the difference that the edges will correspond to the encryption of the password. The colors will correspond to the key and the message of the inside the encryption. Think I said that wrong. Let me say one more time. The edges in the graph will correspond to the encryption. The colors used to color the graph will correspond to the message and the key of that corruption. All right. I did. Thank you. Okay. Now, out of style because we're really Oh, yeah. It was great talking with you guys, I'll bet. Thank You. Said you omit that you guys would be suddenly, hopefully we some notions will be able to clarify in the, in the homework and the citations that you have a Wednesday, the jelly you can you can turn off the recording. All right. Good bye everyone. Bye. And I'll send you a link to talk as though. Okay. Yeah. Bye, bye. Operand.